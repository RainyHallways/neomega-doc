import{_ as s,c as a,o as l,Q as o}from"./chunks/framework.c009d427.js";const h=JSON.parse('{"title":"路径、存储","description":"存储示例","frontmatter":{"lang":"zh-CN","title":"路径、存储","description":"存储示例"},"headers":[],"relativePath":"coromega_examples/存储相关/index.md","filePath":"coromega_examples/存储相关/index.md","lastUpdated":1724487756000}'),n={name:"coromega_examples/存储相关/index.md"},p=o(`<h1 id="存储相关api-storage-path-storage" tabindex="-1">存储相关api(storage_path &amp; storage) <a class="header-anchor" href="#存储相关api-storage-path-storage" aria-label="Permalink to &quot;存储相关api(storage_path &amp; storage)&quot;">​</a></h1><h2 id="获取config文件-插件-路径" tabindex="-1">获取config文件(插件)路径 <a class="header-anchor" href="#获取config文件-插件-路径" aria-label="Permalink to &quot;获取config文件(插件)路径&quot;">​</a></h2><ul><li>config_path_of(...) <ul><li>范围:任意</li><li>说明:获取 config文件(插件)路径 参数可以是想要加上的子目录或者文件名 参数会直接加再代码文件路径后面</li><li>参数: 任意数量的config后需要添加的路径 列如:</li><li>返回值: 返回config+参数的文件存储路径</li></ul><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">coromega</span><span style="color:#E1E4E8;">:</span><span style="color:#79B8FF;">config_path_of</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;test&quot;</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">-- \${neomega_storage}/config/test</span></span>
<span class="line"><span style="color:#B392F0;">coromega</span><span style="color:#E1E4E8;">:</span><span style="color:#79B8FF;">config_path_of</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;插件&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;配置.json&quot;</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">-- \${neomega_storage}/config/插件/配置.json</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">coromega</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">config_path_of</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;test&quot;</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">-- \${neomega_storage}/config/test</span></span>
<span class="line"><span style="color:#6F42C1;">coromega</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">config_path_of</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;插件&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;配置.json&quot;</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">-- \${neomega_storage}/config/插件/配置.json</span></span></code></pre></div></li></ul><h2 id="获取代码文件-插件-路径" tabindex="-1">获取代码文件(插件)路径 <a class="header-anchor" href="#获取代码文件-插件-路径" aria-label="Permalink to &quot;获取代码文件(插件)路径&quot;">​</a></h2><ul><li>code_path_of(...) <ul><li>范围:任意</li><li>说明:获取代码文件(插件)路径 参数可以是想要加上的子目录或者文件名 参数会直接加再代码文件路径后面</li><li>参数: 任意数量code后需要添加的路径 列如:</li><li>返回值: 返回代码文件路径加上参数路径后的新路径字符串</li></ul><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">coromega</span><span style="color:#E1E4E8;">:</span><span style="color:#79B8FF;">code_path_of</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;LuaLoader&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;test&quot;</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">-- {$storage$}/lang/LuaLoader/test</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">coromega</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">code_path_of</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;LuaLoader&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;test&quot;</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">-- {$storage$}/lang/LuaLoader/test</span></span></code></pre></div></li></ul><h2 id="获取data文件路径" tabindex="-1">获取data文件路径 <a class="header-anchor" href="#获取data文件路径" aria-label="Permalink to &quot;获取data文件路径&quot;">​</a></h2><ul><li>data_path_of(...) <ul><li>范围:任意</li><li>说明:获取data文件路径 参数可以是想要加上的相对子目录或者文件路径 参数会直接加再代码文件路径后面</li><li>参数: 任意数量data后需要添加的路径 列如:</li><li>返回值: 返回data+参数的文件存储路径</li></ul><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">coromega</span><span style="color:#E1E4E8;">:</span><span style="color:#79B8FF;">data_path_of</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;test&quot;</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">-- {$storage$}/data/test</span></span>
<span class="line"><span style="color:#B392F0;">coromega</span><span style="color:#E1E4E8;">:</span><span style="color:#79B8FF;">data_path_of</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;小说文件夹&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;雪国冒险奇谭.txt&quot;</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">-- {$storage$}/data/小说文件夹/雪国冒险奇谭.txt</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">coromega</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">data_path_of</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;test&quot;</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">-- {$storage$}/data/test</span></span>
<span class="line"><span style="color:#6F42C1;">coromega</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">data_path_of</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;小说文件夹&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;雪国冒险奇谭.txt&quot;</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">-- {$storage$}/data/小说文件夹/雪国冒险奇谭.txt</span></span></code></pre></div></li></ul><h2 id="获取cache加上参数后的路径" tabindex="-1">获取cache加上参数后的路径 <a class="header-anchor" href="#获取cache加上参数后的路径" aria-label="Permalink to &quot;获取cache加上参数后的路径&quot;">​</a></h2><ul><li>cache_path_of(...) <ul><li>范围:任意</li><li>说明:获取cache加上参数后的路径 参数可以是想要加上的子目录或者文件路径 这个通常是使用于网络的缓存 参数会直接加再代码文件路径后面</li><li>neomega 不会清除此路径下的文件，但是，如果此路径下的文件被清除，相关程序应当能正常工作</li><li>换句话说，应当检查cache下的文件是否存在，而不能假设它存在</li><li>参数: 任意数量cache后需要添加的路径 列如:</li><li>返回值: 返回cache+参数的文件存储路径</li></ul><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">coromega</span><span style="color:#E1E4E8;">:</span><span style="color:#79B8FF;">cache_path_of</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;test&quot;</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">-- {$storage$}/cache/test</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">coromega</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">cache_path_of</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;test&quot;</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">-- {$storage$}/cache/test</span></span></code></pre></div></li></ul><h2 id="创建临时目录" tabindex="-1">创建临时目录 <a class="header-anchor" href="#创建临时目录" aria-label="Permalink to &quot;创建临时目录&quot;">​</a></h2><ul><li>make_temp_dir() <ul><li>范围: 任意</li><li>说明: 新建一个临时文件夹，并返回该文件夹的路径，每次neomega重启时都会移除该文件夹</li><li>需要说明的一点是，该文件夹支持正常的读写和执行权限，而非类似安卓 Downloads 文件夹(neomega 默认路径)那样没有执行权限</li><li>返回值: 临时文件夹的路径</li></ul><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">coromega</span><span style="color:#E1E4E8;">:</span><span style="color:#79B8FF;">make_temp_dir</span><span style="color:#E1E4E8;">() </span><span style="color:#6A737D;">-- 路径</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">coromega</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">make_temp_dir</span><span style="color:#24292E;">() </span><span style="color:#6A737D;">-- 路径</span></span></code></pre></div></li></ul><h2 id="路径拼接" tabindex="-1">路径拼接 <a class="header-anchor" href="#路径拼接" aria-label="Permalink to &quot;路径拼接&quot;">​</a></h2><ul><li>path_join(...) <ul><li>范围:任意</li><li>说明:将参数拼接成新路径</li><li>参数: 任意数量的路径字符串</li><li>返回值: 返回拼接后的路径</li></ul><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">local</span><span style="color:#E1E4E8;"> path </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">coromega</span><span style="color:#E1E4E8;">:</span><span style="color:#79B8FF;">path_join</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;storage&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;test&quot;</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">-- storage/test</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">local</span><span style="color:#24292E;"> path </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">coromega</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">path_join</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;storage&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;test&quot;</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">-- storage/test</span></span></code></pre></div></li></ul><h2 id="目列出目录下所有文件-文件夹" tabindex="-1">目列出目录下所有文件/文件夹 <a class="header-anchor" href="#目列出目录下所有文件-文件夹" aria-label="Permalink to &quot;目列出目录下所有文件/文件夹&quot;">​</a></h2><ul><li>path_list(path) <ul><li>范围:任意</li><li>说明:列出所有path路径下的文件或者目录</li><li>参数: path:指定路径</li><li>返回值: 文件/目录</li></ul><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">local</span><span style="color:#E1E4E8;"> all_files </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">coromega</span><span style="color:#E1E4E8;">:</span><span style="color:#79B8FF;">path_list</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;storage&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#F97583;">local</span><span style="color:#E1E4E8;"> all_files </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">coromega</span><span style="color:#E1E4E8;">:</span><span style="color:#79B8FF;">path_list</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;path/to/dir&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#F97583;">local</span><span style="color:#E1E4E8;"> all_files </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">coromega</span><span style="color:#E1E4E8;">:</span><span style="color:#79B8FF;">path_list</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">coromega</span><span style="color:#E1E4E8;">:</span><span style="color:#79B8FF;">path_join</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;storage&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;test&quot;</span><span style="color:#E1E4E8;">))</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">local</span><span style="color:#24292E;"> all_files </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">coromega</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">path_list</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;storage&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#D73A49;">local</span><span style="color:#24292E;"> all_files </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">coromega</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">path_list</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;path/to/dir&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#D73A49;">local</span><span style="color:#24292E;"> all_files </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">coromega</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">path_list</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">coromega</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">path_join</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;storage&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;test&quot;</span><span style="color:#24292E;">))</span></span></code></pre></div></li></ul><h2 id="获取绝对路径" tabindex="-1">获取绝对路径 <a class="header-anchor" href="#获取绝对路径" aria-label="Permalink to &quot;获取绝对路径&quot;">​</a></h2><ul><li>path_abs(path) <ul><li>范围:任意</li><li>说明:获取path文件/目录路径的绝对路径</li><li>参数: path:需要获取的路径</li><li>返回值: 返回path路径的绝对路径</li></ul><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">local</span><span style="color:#E1E4E8;"> abs_path </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">coromega</span><span style="color:#E1E4E8;">:</span><span style="color:#79B8FF;">path_abs</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;storage&quot;</span><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">local</span><span style="color:#24292E;"> abs_path </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">coromega</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">path_abs</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;storage&quot;</span><span style="color:#24292E;">)</span></span></code></pre></div></li></ul><h2 id="获取文件扩展名" tabindex="-1">获取文件扩展名 <a class="header-anchor" href="#获取文件扩展名" aria-label="Permalink to &quot;获取文件扩展名&quot;">​</a></h2><ul><li>path_ext(path) <ul><li>范围:任意</li><li>说明:获取path路径文件的扩展名</li><li>参数: path:需要获取文件的路径</li><li>返回值: 返回path路径的扩展名</li></ul><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">local</span><span style="color:#E1E4E8;"> ext </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">coromega</span><span style="color:#E1E4E8;">:</span><span style="color:#79B8FF;">path_ext</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;test.lua&quot;</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">-- .lua</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">local</span><span style="color:#24292E;"> ext </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">coromega</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">path_ext</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;test.lua&quot;</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">-- .lua</span></span></code></pre></div></li></ul><h2 id="移动文件" tabindex="-1">移动文件 <a class="header-anchor" href="#移动文件" aria-label="Permalink to &quot;移动文件&quot;">​</a></h2><ul><li>path_move(src, dst) <ul><li>范围:任意</li><li>说明:将src路径文件或者目录移动到dst路径, 相当于剪切</li><li>参数: src:需要移动的路径 dst:移动后的路径</li><li>返回值: 无</li></ul><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">coromega</span><span style="color:#E1E4E8;">:</span><span style="color:#79B8FF;">path_move</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;test&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;test2&quot;</span><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">coromega</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">path_move</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;test&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;test2&quot;</span><span style="color:#24292E;">)</span></span></code></pre></div></li></ul><h2 id="删除文件-目录" tabindex="-1">删除文件/目录 <a class="header-anchor" href="#删除文件-目录" aria-label="Permalink to &quot;删除文件/目录&quot;">​</a></h2><ul><li>path_remove(path) <ul><li>范围:任意</li><li>说明:删除path路径文件/目录</li><li>参数: path:需要删除的文件路径/目录</li><li>返回值: 无</li></ul><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">coromega</span><span style="color:#E1E4E8;">:</span><span style="color:#79B8FF;">path_remove</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;test&quot;</span><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">coromega</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">path_remove</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;test&quot;</span><span style="color:#24292E;">)</span></span></code></pre></div></li></ul><h2 id="判断路径是否存在" tabindex="-1">判断路径是否存在 <a class="header-anchor" href="#判断路径是否存在" aria-label="Permalink to &quot;判断路径是否存在&quot;">​</a></h2><ul><li>path_exist(path) <ul><li>范围:任意</li><li>说明:判断path路径是否存在</li><li>参数: path:需要判断的路径</li><li>返回值: 返回path路径是否存在</li></ul><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">local</span><span style="color:#E1E4E8;"> is_exist </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">coromega</span><span style="color:#E1E4E8;">:</span><span style="color:#79B8FF;">path_exist</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;test&quot;</span><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">local</span><span style="color:#24292E;"> is_exist </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">coromega</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">path_exist</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;test&quot;</span><span style="color:#24292E;">)</span></span></code></pre></div></li></ul><h2 id="数据保存至文件" tabindex="-1">数据保存至文件 <a class="header-anchor" href="#数据保存至文件" aria-label="Permalink to &quot;数据保存至文件&quot;">​</a></h2><ul><li>save_data(path, data) <ul><li>范围:任意</li><li>说明:将data数据以json形式保存到path路径的文件中去</li><li>参数: path:需要保存的文件路径 data:需要保存的数据</li><li>返回值: 无</li></ul><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">coromega</span><span style="color:#E1E4E8;">:</span><span style="color:#79B8FF;">save_data</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">coromega</span><span style="color:#E1E4E8;">:</span><span style="color:#79B8FF;">data_path_of</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;test.json&quot;</span><span style="color:#E1E4E8;">),</span><span style="color:#9ECBFF;">&quot;Hello World!&quot;</span><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">coromega</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">save_data</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">coromega</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">data_path_of</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;test.json&quot;</span><span style="color:#24292E;">),</span><span style="color:#032F62;">&quot;Hello World!&quot;</span><span style="color:#24292E;">)</span></span></code></pre></div></li></ul><h2 id="读取文件数据" tabindex="-1">读取文件数据 <a class="header-anchor" href="#读取文件数据" aria-label="Permalink to &quot;读取文件数据&quot;">​</a></h2><ul><li>load_data(path) <ul><li>范围:任意</li><li>说明:从path路径读取json数据</li><li>参数: path:需要读取的路径</li><li>返回值: 返回读取的数据</li></ul><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">local</span><span style="color:#E1E4E8;"> data </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">coromega</span><span style="color:#E1E4E8;">:</span><span style="color:#79B8FF;">load_data</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">coromega</span><span style="color:#E1E4E8;">:</span><span style="color:#79B8FF;">data_path_of</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;test.json&quot;</span><span style="color:#E1E4E8;">))</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">local</span><span style="color:#24292E;"> data </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">coromega</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">load_data</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">coromega</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">data_path_of</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;test.json&quot;</span><span style="color:#24292E;">))</span></span></code></pre></div></li></ul><h1 id="数据库相关api-database" tabindex="-1">数据库相关api(database) <a class="header-anchor" href="#数据库相关api-database" aria-label="Permalink to &quot;数据库相关api(database)&quot;">​</a></h1><blockquote><p>以下均为db对象的方法 这里需要特殊注意 neomega使用的数据库是键值对数据库 也就是key:value的形式 key和value都是字符串</p></blockquote><h2 id="创建数据库对象" tabindex="-1">创建数据库对象 <a class="header-anchor" href="#创建数据库对象" aria-label="Permalink to &quot;创建数据库对象&quot;">​</a></h2><ul><li>key_value_db(path) <ul><li>范围:任意</li><li>说明:根据path路径的数据库文件创建一个key_value_db对象 也就是db对象 如果不含有该文件 则自动创建 然后返回db对象</li><li>参数: path:数据库的路径</li><li>返回值: 返回一个key_value_db对象</li></ul><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">local</span><span style="color:#E1E4E8;"> db </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">coromega</span><span style="color:#E1E4E8;">:</span><span style="color:#79B8FF;">key_value_db</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;存储文件&quot;</span><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">local</span><span style="color:#24292E;"> db </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">coromega</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">key_value_db</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;存储文件&quot;</span><span style="color:#24292E;">)</span></span></code></pre></div></li></ul><h2 id="获取数据对象" tabindex="-1">获取数据对象 <a class="header-anchor" href="#获取数据对象" aria-label="Permalink to &quot;获取数据对象&quot;">​</a></h2><ul><li>get(key) <ul><li>范围:任意</li><li>说明:获取key的值</li><li>参数: key 为你需要查询的键值对的索引值 也就是键值</li><li>返回值: 返回key的值 如果没有可以通过~=&quot;&quot;或者not value来判断</li></ul><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">local</span><span style="color:#E1E4E8;"> value </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">db</span><span style="color:#E1E4E8;">:</span><span style="color:#79B8FF;">get</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;test&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">not</span><span style="color:#E1E4E8;"> value </span><span style="color:#F97583;">then</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">coromega</span><span style="color:#E1E4E8;">:</span><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;不存在该字符串&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#F97583;">end</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">local</span><span style="color:#24292E;"> value </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">db</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">get</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;test&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#D73A49;">if</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">not</span><span style="color:#24292E;"> value </span><span style="color:#D73A49;">then</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">coromega</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">print</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;不存在该字符串&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#D73A49;">end</span></span></code></pre></div></li></ul><h2 id="存储数据" tabindex="-1">存储数据 <a class="header-anchor" href="#存储数据" aria-label="Permalink to &quot;存储数据&quot;">​</a></h2><ul><li>set(key, value) <ul><li>范围:任意</li><li>说明:向数据库中存入一对数据</li><li>参数: key为索引 value为存入的值</li><li>返回值: 无</li></ul><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">db</span><span style="color:#E1E4E8;">:</span><span style="color:#79B8FF;">set</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;test&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Hello World!&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#B392F0;">db</span><span style="color:#E1E4E8;">:</span><span style="color:#79B8FF;">set</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;age&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">18</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#B392F0;">db</span><span style="color:#E1E4E8;">:</span><span style="color:#79B8FF;">set</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;author&quot;</span><span style="color:#E1E4E8;">,{name</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;somebody&quot;</span><span style="color:#E1E4E8;">,age</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">18</span><span style="color:#E1E4E8;">,keywords</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">{</span><span style="color:#9ECBFF;">&quot;machine_learning&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;computer_version&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;nlp&quot;</span><span style="color:#E1E4E8;">}})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">db</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">set</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;test&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Hello World!&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#6F42C1;">db</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">set</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;age&quot;</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">18</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#6F42C1;">db</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">set</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;author&quot;</span><span style="color:#24292E;">,{name</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;somebody&quot;</span><span style="color:#24292E;">,age</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">18</span><span style="color:#24292E;">,keywords</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">{</span><span style="color:#032F62;">&quot;machine_learning&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;computer_version&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;nlp&quot;</span><span style="color:#24292E;">}})</span></span></code></pre></div></li></ul><h2 id="删除数据" tabindex="-1">删除数据 <a class="header-anchor" href="#删除数据" aria-label="Permalink to &quot;删除数据&quot;">​</a></h2><ul><li>delete(key) <ul><li>范围:任意</li><li>说明:删除 key索引对应的键值对 其本质就是coromega:set(key,&quot;&quot;) 也就是将key对应的value的值设为&quot;&quot;(空字符串)</li><li>参数: key:需要删除的key</li><li>返回值: 无</li></ul><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">db</span><span style="color:#E1E4E8;">:</span><span style="color:#79B8FF;">delete</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;test&quot;</span><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">db</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">delete</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;test&quot;</span><span style="color:#24292E;">)</span></span></code></pre></div></li></ul><h2 id="遍历数据库" tabindex="-1">遍历数据库 <a class="header-anchor" href="#遍历数据库" aria-label="Permalink to &quot;遍历数据库&quot;">​</a></h2><ul><li>iter(fn) <ul><li>范围:任意</li><li>说明:遍历数据库 为每一个键值对执行函数fn</li><li>参数: fn:遍历时的回调函数</li><li>返回值: 无</li></ul><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">db</span><span style="color:#E1E4E8;">:</span><span style="color:#79B8FF;">iter</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">(key, value)</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">coromega</span><span style="color:#E1E4E8;">:</span><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(key, value)</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">local</span><span style="color:#E1E4E8;"> next</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">true</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">next</span></span>
<span class="line"><span style="color:#F97583;">end</span><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">db</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">iter</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">function</span><span style="color:#24292E;">(key, value)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">coromega</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">print</span><span style="color:#24292E;">(key, value)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">local</span><span style="color:#24292E;"> next</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">true</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">next</span></span>
<span class="line"><span style="color:#D73A49;">end</span><span style="color:#24292E;">)</span></span></code></pre></div></li></ul>`,41),e=[p];function t(c,r,i,y,E,u){return l(),a("div",null,e)}const F=s(n,[["render",t]]);export{h as __pageData,F as default};
