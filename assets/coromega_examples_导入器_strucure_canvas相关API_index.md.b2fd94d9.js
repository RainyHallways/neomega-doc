import{_ as s,c as a,o as l,Q as n}from"./chunks/framework.c009d427.js";const _=JSON.parse('{"title":"方块转换和nbt","description":"方块转换和nbt示例","frontmatter":{"lang":"zh-CN","title":"方块转换和nbt","description":"方块转换和nbt示例"},"headers":[],"relativePath":"coromega_examples/导入器_strucure_canvas相关API/index.md","filePath":"coromega_examples/导入器_strucure_canvas相关API/index.md","lastUpdated":1724487756000}'),o={name:"coromega_examples/导入器_strucure_canvas相关API/index.md"},p=n(`<h2 id="方块转换和-nbt-相关-api" tabindex="-1">方块转换和 nbt 相关 API <a class="header-anchor" href="#方块转换和-nbt-相关-api" aria-label="Permalink to &quot;方块转换和 nbt 相关 API&quot;">​</a></h2><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">local</span><span style="color:#E1E4E8;"> blocks </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> omega.</span><span style="color:#B392F0;">blocks</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">local</span><span style="color:#24292E;"> blocks </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> omega.</span><span style="color:#6F42C1;">blocks</span></span></code></pre></div><h3 id="将传统格式方块转换为-runtime-id-表示" tabindex="-1">将传统格式方块转换为 runtime id 表示 <a class="header-anchor" href="#将传统格式方块转换为-runtime-id-表示" aria-label="Permalink to &quot;将传统格式方块转换为 runtime id 表示&quot;">​</a></h3><ul><li>blocks.legacy_block_to_rtid <ul><li>将传统格式方块转换为 runtime id 表示(注意，不应该在文件中保存 runtime id，因为 runtime id 会随版本发生变化)</li></ul><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">local</span><span style="color:#E1E4E8;"> rtid, found </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> blocks.</span><span style="color:#79B8FF;">legacy_block_to_rtid</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;stained_glass&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(found, rtid)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">local</span><span style="color:#24292E;"> rtid, found </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> blocks.</span><span style="color:#005CC5;">legacy_block_to_rtid</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;stained_glass&quot;</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(found, rtid)</span></span></code></pre></div></li></ul><h3 id="将-runtime-id-表示的方块转为传统表示" tabindex="-1">将 runtime id 表示的方块转为传统表示 <a class="header-anchor" href="#将-runtime-id-表示的方块转为传统表示" aria-label="Permalink to &quot;将 runtime id 表示的方块转为传统表示&quot;">​</a></h3><ul><li>blocks.rtid_to_legacy_block<div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">local</span><span style="color:#E1E4E8;"> blockName, blockData, found </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> blocks.</span><span style="color:#79B8FF;">rtid_to_legacy_block</span><span style="color:#E1E4E8;">(rtid)</span></span>
<span class="line"><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(found, blockName, blockData)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">local</span><span style="color:#24292E;"> blockName, blockData, found </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> blocks.</span><span style="color:#005CC5;">rtid_to_legacy_block</span><span style="color:#24292E;">(rtid)</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(found, blockName, blockData)</span></span></code></pre></div></li></ul><h3 id="将-runtime-id-表示的方块转为-block-name-block-state-表示" tabindex="-1">将 runtime id 表示的方块转为 block name, block state 表示 <a class="header-anchor" href="#将-runtime-id-表示的方块转为-block-name-block-state-表示" aria-label="Permalink to &quot;将 runtime id 表示的方块转为 block name, block state 表示&quot;">​</a></h3><ul><li>blocks.rtid_to_block_name_and_state<div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">local</span><span style="color:#E1E4E8;"> blockName, blockState, found </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> blocks.</span><span style="color:#79B8FF;">rtid_to_block_name_and_state</span><span style="color:#E1E4E8;">(rtid)</span></span>
<span class="line"><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(found, (</span><span style="color:#9ECBFF;">&quot;%s [%s]&quot;</span><span style="color:#E1E4E8;">):</span><span style="color:#79B8FF;">format</span><span style="color:#E1E4E8;">(blockName, blockState))</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">local</span><span style="color:#24292E;"> blockName, blockState, found </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> blocks.</span><span style="color:#005CC5;">rtid_to_block_name_and_state</span><span style="color:#24292E;">(rtid)</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(found, (</span><span style="color:#032F62;">&quot;%s [%s]&quot;</span><span style="color:#24292E;">):</span><span style="color:#005CC5;">format</span><span style="color:#24292E;">(blockName, blockState))</span></span></code></pre></div></li></ul><h3 id="将-block-name-block-state-表示转为-runtime-id-表示" tabindex="-1">将 block name, block state 表示转为 runtime id 表示 <a class="header-anchor" href="#将-block-name-block-state-表示转为-runtime-id-表示" aria-label="Permalink to &quot;将 block name, block state 表示转为 runtime id 表示&quot;">​</a></h3><ul><li>blocks.block_name_and_state_to_rtid<div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">local</span><span style="color:#E1E4E8;"> rtid, found </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> blocks.</span><span style="color:#79B8FF;">block_name_and_state_to_rtid</span><span style="color:#E1E4E8;">(blockName, blockState)</span></span>
<span class="line"><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(found, rtid)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">local</span><span style="color:#24292E;"> rtid, found </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> blocks.</span><span style="color:#005CC5;">block_name_and_state_to_rtid</span><span style="color:#24292E;">(blockName, blockState)</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(found, rtid)</span></span></code></pre></div></li></ul><h3 id="将-runtime-id-表示的方块转为-java-表示" tabindex="-1">将 runtime id 表示的方块转为 java 表示 <a class="header-anchor" href="#将-runtime-id-表示的方块转为-java-表示" aria-label="Permalink to &quot;将 runtime id 表示的方块转为 java 表示&quot;">​</a></h3><ul><li>blocks.rtid_to_java_str<div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">local</span><span style="color:#E1E4E8;"> java_str, found </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> blocks.</span><span style="color:#79B8FF;">rtid_to_java_str</span><span style="color:#E1E4E8;">(rtid)</span></span>
<span class="line"><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(found, java_str)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">local</span><span style="color:#24292E;"> java_str, found </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> blocks.</span><span style="color:#005CC5;">rtid_to_java_str</span><span style="color:#24292E;">(rtid)</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(found, java_str)</span></span></code></pre></div></li></ul><h3 id="将-java-表示转为-runtime-id-表示" tabindex="-1">将 java 表示转为 runtime id 表示 <a class="header-anchor" href="#将-java-表示转为-runtime-id-表示" aria-label="Permalink to &quot;将 java 表示转为 runtime id 表示&quot;">​</a></h3><ul><li>blocks.block_name_and_state_to_rtid<div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">local</span><span style="color:#E1E4E8;"> rtid, found </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> blocks.</span><span style="color:#79B8FF;">java_str_to_rtid</span><span style="color:#E1E4E8;">(java_str)</span></span>
<span class="line"><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(found, rtid)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">local</span><span style="color:#24292E;"> rtid, found </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> blocks.</span><span style="color:#005CC5;">java_str_to_rtid</span><span style="color:#24292E;">(java_str)</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(found, rtid)</span></span></code></pre></div></li></ul><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">local</span><span style="color:#E1E4E8;"> blocks </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> omega.</span><span style="color:#B392F0;">blocks</span></span>
<span class="line"><span style="color:#F97583;">local</span><span style="color:#E1E4E8;"> rtid, found </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> blocks.</span><span style="color:#79B8FF;">legacy_block_to_rtid</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;stained_glass&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(found, rtid)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">local</span><span style="color:#E1E4E8;"> blockName, blockData, found </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> blocks.</span><span style="color:#79B8FF;">rtid_to_legacy_block</span><span style="color:#E1E4E8;">(rtid)</span></span>
<span class="line"><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(found, blockName, blockData)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">local</span><span style="color:#E1E4E8;"> blockName, blockState, found </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> blocks.</span><span style="color:#79B8FF;">rtid_to_block_name_and_state</span><span style="color:#E1E4E8;">(rtid)</span></span>
<span class="line"><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(found, (</span><span style="color:#9ECBFF;">&quot;%s [%s]&quot;</span><span style="color:#E1E4E8;">):</span><span style="color:#79B8FF;">format</span><span style="color:#E1E4E8;">(blockName, blockState))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">local</span><span style="color:#E1E4E8;"> rtid, found </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> blocks.</span><span style="color:#79B8FF;">block_name_and_state_to_rtid</span><span style="color:#E1E4E8;">(blockName, blockState)</span></span>
<span class="line"><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(found, rtid)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">local</span><span style="color:#E1E4E8;"> java_str, found </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> blocks.</span><span style="color:#79B8FF;">rtid_to_java_str</span><span style="color:#E1E4E8;">(rtid)</span></span>
<span class="line"><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(found, java_str)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">local</span><span style="color:#E1E4E8;"> rtid, found </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> blocks.</span><span style="color:#79B8FF;">java_str_to_rtid</span><span style="color:#E1E4E8;">(java_str)</span></span>
<span class="line"><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(found, rtid)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">local</span><span style="color:#24292E;"> blocks </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> omega.</span><span style="color:#6F42C1;">blocks</span></span>
<span class="line"><span style="color:#D73A49;">local</span><span style="color:#24292E;"> rtid, found </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> blocks.</span><span style="color:#005CC5;">legacy_block_to_rtid</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;stained_glass&quot;</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(found, rtid)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">local</span><span style="color:#24292E;"> blockName, blockData, found </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> blocks.</span><span style="color:#005CC5;">rtid_to_legacy_block</span><span style="color:#24292E;">(rtid)</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(found, blockName, blockData)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">local</span><span style="color:#24292E;"> blockName, blockState, found </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> blocks.</span><span style="color:#005CC5;">rtid_to_block_name_and_state</span><span style="color:#24292E;">(rtid)</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(found, (</span><span style="color:#032F62;">&quot;%s [%s]&quot;</span><span style="color:#24292E;">):</span><span style="color:#005CC5;">format</span><span style="color:#24292E;">(blockName, blockState))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">local</span><span style="color:#24292E;"> rtid, found </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> blocks.</span><span style="color:#005CC5;">block_name_and_state_to_rtid</span><span style="color:#24292E;">(blockName, blockState)</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(found, rtid)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">local</span><span style="color:#24292E;"> java_str, found </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> blocks.</span><span style="color:#005CC5;">rtid_to_java_str</span><span style="color:#24292E;">(rtid)</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(found, java_str)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">local</span><span style="color:#24292E;"> rtid, found </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> blocks.</span><span style="color:#005CC5;">java_str_to_rtid</span><span style="color:#24292E;">(java_str)</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(found, rtid)</span></span></code></pre></div><h2 id="nbt-编辑与生成操作" tabindex="-1">nbt 编辑与生成操作 <a class="header-anchor" href="#nbt-编辑与生成操作" aria-label="Permalink to &quot;nbt 编辑与生成操作&quot;">​</a></h2><p>local nbt = blocks.new_nbt()</p><h3 id="从方块-nbt-中读取-id" tabindex="-1">从方块 nbt 中读取 ID <a class="header-anchor" href="#从方块-nbt-中读取-id" aria-label="Permalink to &quot;从方块 nbt 中读取 ID&quot;">​</a></h3><ul><li>nbt:get_id()<div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">local</span><span style="color:#E1E4E8;"> nbt_block_id</span><span style="color:#F97583;">=</span><span style="color:#B392F0;">nbt</span><span style="color:#E1E4E8;">:</span><span style="color:#79B8FF;">get_id</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">local</span><span style="color:#24292E;"> nbt_block_id</span><span style="color:#D73A49;">=</span><span style="color:#6F42C1;">nbt</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">get_id</span><span style="color:#24292E;">()</span></span></code></pre></div></li></ul><h3 id="从方块-nbt-中读取某个-key-的-string" tabindex="-1">从方块 nbt 中读取某个 key 的 string <a class="header-anchor" href="#从方块-nbt-中读取某个-key-的-string" aria-label="Permalink to &quot;从方块 nbt 中读取某个 key 的 string&quot;">​</a></h3><ul><li>nbt:get_string(key)<div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">local</span><span style="color:#E1E4E8;"> value</span><span style="color:#F97583;">=</span><span style="color:#B392F0;">nbt</span><span style="color:#E1E4E8;">:</span><span style="color:#79B8FF;">get_string</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;name&quot;</span><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">local</span><span style="color:#24292E;"> value</span><span style="color:#D73A49;">=</span><span style="color:#6F42C1;">nbt</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">get_string</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;name&quot;</span><span style="color:#24292E;">)</span></span></code></pre></div></li></ul><h3 id="将方块-nbt-中某个-key-的值设置为指定-string" tabindex="-1">将方块 nbt 中某个 key 的值设置为指定 string <a class="header-anchor" href="#将方块-nbt-中某个-key-的值设置为指定-string" aria-label="Permalink to &quot;将方块 nbt 中某个 key 的值设置为指定 string&quot;">​</a></h3><ul><li>nbt:set_string(key,value)<div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">local</span><span style="color:#E1E4E8;"> value</span><span style="color:#F97583;">=</span><span style="color:#B392F0;">nbt</span><span style="color:#E1E4E8;">:</span><span style="color:#79B8FF;">set_string</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;name&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;#test&quot;</span><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">local</span><span style="color:#24292E;"> value</span><span style="color:#D73A49;">=</span><span style="color:#6F42C1;">nbt</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">set_string</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;name&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;#test&quot;</span><span style="color:#24292E;">)</span></span></code></pre></div></li></ul><h3 id="复制-nbt-并获得副本" tabindex="-1">复制 nbt 并获得副本 <a class="header-anchor" href="#复制-nbt-并获得副本" aria-label="Permalink to &quot;复制 nbt 并获得副本&quot;">​</a></h3><ul><li>nbt:copy()<div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">local</span><span style="color:#E1E4E8;"> copied_nbt</span><span style="color:#F97583;">=</span><span style="color:#B392F0;">nbt</span><span style="color:#E1E4E8;">:</span><span style="color:#79B8FF;">copy</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">local</span><span style="color:#24292E;"> copied_nbt</span><span style="color:#D73A49;">=</span><span style="color:#6F42C1;">nbt</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">copy</span><span style="color:#24292E;">()</span></span></code></pre></div></li></ul><h3 id="将-nbt-转为字符串表示" tabindex="-1">将 nbt 转为字符串表示 <a class="header-anchor" href="#将-nbt-转为字符串表示" aria-label="Permalink to &quot;将 nbt 转为字符串表示&quot;">​</a></h3><ul><li>nbt:to_str()<div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">local</span><span style="color:#E1E4E8;"> string_represent</span><span style="color:#F97583;">=</span><span style="color:#B392F0;">nbt</span><span style="color:#E1E4E8;">:</span><span style="color:#79B8FF;">to_str</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">local</span><span style="color:#24292E;"> string_represent</span><span style="color:#D73A49;">=</span><span style="color:#6F42C1;">nbt</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">to_str</span><span style="color:#24292E;">()</span></span></code></pre></div></li></ul><h3 id="将-字符串表示-的内容恢复到此-nbt" tabindex="-1">将 字符串表示 的内容恢复到此 nbt <a class="header-anchor" href="#将-字符串表示-的内容恢复到此-nbt" aria-label="Permalink to &quot;将 字符串表示 的内容恢复到此 nbt&quot;">​</a></h3><ul><li>nbt:from_str(string_represent)<div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">local</span><span style="color:#E1E4E8;"> nbt</span><span style="color:#F97583;">=</span><span style="color:#B392F0;">nbt</span><span style="color:#E1E4E8;">:</span><span style="color:#79B8FF;">from_str</span><span style="color:#E1E4E8;">(string_represent)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">local</span><span style="color:#24292E;"> nbt</span><span style="color:#D73A49;">=</span><span style="color:#6F42C1;">nbt</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">from_str</span><span style="color:#24292E;">(string_represent)</span></span></code></pre></div></li></ul><h3 id="检查-nbt-是否为空" tabindex="-1">检查 nbt 是否为空 <a class="header-anchor" href="#检查-nbt-是否为空" aria-label="Permalink to &quot;检查 nbt 是否为空&quot;">​</a></h3><ul><li>nbt:is_empty()<div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">local</span><span style="color:#E1E4E8;"> is_empty</span><span style="color:#F97583;">=</span><span style="color:#B392F0;">nbt</span><span style="color:#E1E4E8;">:</span><span style="color:#79B8FF;">is_empty</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">local</span><span style="color:#24292E;"> is_empty</span><span style="color:#D73A49;">=</span><span style="color:#6F42C1;">nbt</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">is_empty</span><span style="color:#24292E;">()</span></span></code></pre></div></li></ul><h3 id="清除-nbt-内数据" tabindex="-1">清除 nbt 内数据 <a class="header-anchor" href="#清除-nbt-内数据" aria-label="Permalink to &quot;清除 nbt 内数据&quot;">​</a></h3><ul><li>nbt:empty()<div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">nbt</span><span style="color:#E1E4E8;">:</span><span style="color:#79B8FF;">empty</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">nbt</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">empty</span><span style="color:#24292E;">()</span></span></code></pre></div></li></ul><h2 id="建筑和画布" tabindex="-1">建筑和画布 <a class="header-anchor" href="#建筑和画布" aria-label="Permalink to &quot;建筑和画布&quot;">​</a></h2><ul><li>建筑和画布围绕三个重要的抽象概念实现: <ul><li>AreaChunk: 由两个坐标确定的区块区域，以及一些可能的附加信息</li><li>Structure: 对应磁盘中的一个国际服存档文件</li><li>Canvas: 可以逐个放置方块的对象</li></ul></li><li>概念实现: <ul><li>structures.convert_file_to_structure(structure_path,structure_file_path) <ul><li>实现了 AreaChunk 和 Structure 概念, structure_file_path 为一个 .mcworld / .schem / .schematic /.bdx 文件</li><li>当 structure_file_path 为 .mcworld 文件时，mcworld 文件被解压到 structure_path 并返回 structure</li><li>当 structure_file_path 为 .schem / .schematic /.bdx 文件时，若 structure_path 不存在或者为空时，就地创建一个国际服存档，并将 structure_file_path 文件内容写入此存档，若 structure_path 为一个国际服存档，则将 structure_file_path 文件内容直接写入此存档， 都返回 structure</li></ul><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">local</span><span style="color:#E1E4E8;"> structures</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">omega.</span><span style="color:#B392F0;">structures</span></span>
<span class="line"><span style="color:#F97583;">local</span><span style="color:#E1E4E8;"> source_structure </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> structures.</span><span style="color:#79B8FF;">convert_file_to_structure</span><span style="color:#E1E4E8;">(source_structure_dir, source_structure_file)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">local</span><span style="color:#24292E;"> structures</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">omega.</span><span style="color:#6F42C1;">structures</span></span>
<span class="line"><span style="color:#D73A49;">local</span><span style="color:#24292E;"> source_structure </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> structures.</span><span style="color:#005CC5;">convert_file_to_structure</span><span style="color:#24292E;">(source_structure_dir, source_structure_file)</span></span></code></pre></div></li><li>structures.open_or_create_structure(path) <ul><li>实现了 AreaChunk 和 Structure 概念, 当 path 对应的路径不存在或者为空时，就地创建一个国际服存档, 当 path 对应的路径为国际服存档时， 则直接打开该存档，都返回 structure</li></ul><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">local</span><span style="color:#E1E4E8;"> structures</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">omega.</span><span style="color:#B392F0;">structures</span></span>
<span class="line"><span style="color:#F97583;">local</span><span style="color:#E1E4E8;"> source_structure </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> structures.</span><span style="color:#79B8FF;">open_or_create_structure</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;some_dir&quot;</span><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">local</span><span style="color:#24292E;"> structures</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">omega.</span><span style="color:#6F42C1;">structures</span></span>
<span class="line"><span style="color:#D73A49;">local</span><span style="color:#24292E;"> source_structure </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> structures.</span><span style="color:#005CC5;">open_or_create_structure</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;some_dir&quot;</span><span style="color:#24292E;">)</span></span></code></pre></div></li><li>structures.new_canvas() <ul><li>实现了 AreaChunk 和 Canvas 概念</li><li>驻留在内存中，不会产生文件</li></ul><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">local</span><span style="color:#E1E4E8;"> canvas </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> structure.</span><span style="color:#79B8FF;">new_canvas</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">local</span><span style="color:#24292E;"> canvas </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> structure.</span><span style="color:#005CC5;">new_canvas</span><span style="color:#24292E;">()</span></span></code></pre></div></li></ul></li></ul><h2 id="area-chunk" tabindex="-1">Area Chunk <a class="header-anchor" href="#area-chunk" aria-label="Permalink to &quot;Area Chunk&quot;">​</a></h2><h3 id="复制和移动" tabindex="-1">复制和移动 <a class="header-anchor" href="#复制和移动" aria-label="Permalink to &quot;复制和移动&quot;">​</a></h3><ul><li>structures.copy(source, target, source_start_pos, source_end_pos, offset) <ul><li>将源区域内的方块复制到目标区域,如果需要移动，可以修改偏移量(偏移量)<div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">local</span><span style="color:#E1E4E8;"> structures</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">omega.</span><span style="color:#B392F0;">structures</span></span>
<span class="line"><span style="color:#F97583;">local</span><span style="color:#E1E4E8;"> source_start_pos </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">source_structure_or_canvas</span><span style="color:#E1E4E8;">:</span><span style="color:#79B8FF;">get_start_pos</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#F97583;">local</span><span style="color:#E1E4E8;"> source_end_pos </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">source_structure_or_canvas</span><span style="color:#E1E4E8;">:</span><span style="color:#79B8FF;">get_end_pos</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#F97583;">local</span><span style="color:#E1E4E8;"> offset </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> { x </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">, y </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">, z </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;"> }</span></span>
<span class="line"><span style="color:#E1E4E8;">structures.</span><span style="color:#79B8FF;">copy</span><span style="color:#E1E4E8;">(source_structure_or_canvas,target_structure_or_canvas,source_start_pos, source_end_pos, offset)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">local</span><span style="color:#24292E;"> structures</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">omega.</span><span style="color:#6F42C1;">structures</span></span>
<span class="line"><span style="color:#D73A49;">local</span><span style="color:#24292E;"> source_start_pos </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">source_structure_or_canvas</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">get_start_pos</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#D73A49;">local</span><span style="color:#24292E;"> source_end_pos </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">source_structure_or_canvas</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">get_end_pos</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#D73A49;">local</span><span style="color:#24292E;"> offset </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> { x </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">, y </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">, z </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;"> }</span></span>
<span class="line"><span style="color:#24292E;">structures.</span><span style="color:#005CC5;">copy</span><span style="color:#24292E;">(source_structure_or_canvas,target_structure_or_canvas,source_start_pos, source_end_pos, offset)</span></span></code></pre></div></li></ul></li></ul><h3 id="调用-omega-builder-构建一个区块范围的方块" tabindex="-1">调用 omega builder 构建一个区块范围的方块 <a class="header-anchor" href="#调用-omega-builder-构建一个区块范围的方块" aria-label="Permalink to &quot;调用 omega builder 构建一个区块范围的方块&quot;">​</a></h3><p>调用该API时，由 omega builder 负责方块正确的构建 您需要有对应的权限</p><ul><li>when_progress_increased_by_build(aread_chunk, start_pos, end_pos, target_pos, option) <ul><li>范围: 任意</li><li>说明: 导入 详细如下</li><li>参数: <ul><li>aread_chunk: 需要导入的数据 (structure / canvas)</li><li>start_pos: 被导入的东西的起始位置</li><li>end_pos: 被导入的东西的的结束位置</li><li>target_pos: 导入的位置(服务器中)</li><li>option: 导入的选项</li></ul></li><li>返回值为监听器</li><li>监听器的回调函数的参数为 全部任务和当前进度，当 total==current 时，导入完成</li></ul><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">coromega</span><span style="color:#E1E4E8;">:</span><span style="color:#79B8FF;">when_progress_increased_by_build</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    target_structure_or_canvas,                  </span><span style="color:#6A737D;">--需要被导的东西</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">target_structure_or_canvas</span><span style="color:#E1E4E8;">:</span><span style="color:#79B8FF;">get_start_pos</span><span style="color:#E1E4E8;">(),  </span><span style="color:#6A737D;">--被导的东西的起始位置</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">target_structure_or_canvas</span><span style="color:#E1E4E8;">:</span><span style="color:#79B8FF;">get_end_pos</span><span style="color:#E1E4E8;">(),    </span><span style="color:#6A737D;">--被导的东西的结束位置</span></span>
<span class="line"><span style="color:#E1E4E8;">    { x </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">31000</span><span style="color:#E1E4E8;">, y </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">100</span><span style="color:#E1E4E8;">, z </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">11000</span><span style="color:#E1E4E8;"> },           </span><span style="color:#6A737D;">--导入到的位置(租赁服中)</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span></span>
<span class="line"><span style="color:#E1E4E8;">        speed </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2000</span><span style="color:#E1E4E8;">,                            </span><span style="color:#6A737D;">--导入速度</span></span>
<span class="line"><span style="color:#E1E4E8;">        incremental </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">,                     </span><span style="color:#6A737D;">--增量构建(false)</span></span>
<span class="line"><span style="color:#E1E4E8;">        force_use_block_state </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">,           </span><span style="color:#6A737D;">--强制使用block state(false),注：即时这里设置false，如果struceture中use_block_state为true，也会使用block state</span></span>
<span class="line"><span style="color:#E1E4E8;">        ignore_nbt_block </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">,                </span><span style="color:#6A737D;">--是否忽略nbt方块(false)</span></span>
<span class="line"><span style="color:#E1E4E8;">        clear_target_block </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">,              </span><span style="color:#6A737D;">--导入时清除目标位置的方块(false)</span></span>
<span class="line"><span style="color:#E1E4E8;">        clear_dropped_item </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">,              </span><span style="color:#6A737D;">--导入时清理掉落物(false)，注: 清理范围为整个租赁服，不止是导入的建筑范围</span></span>
<span class="line"><span style="color:#E1E4E8;">        auto_reverse </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,                      </span><span style="color:#6A737D;">--（重新开始时回退跃点）(true)</span></span>
<span class="line"><span style="color:#E1E4E8;">        start_hop</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">,                             </span><span style="color:#6A737D;">--开始跃点(0)</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">):</span><span style="color:#79B8FF;">start_new</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">(total, current)</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">coromega</span><span style="color:#E1E4E8;">:</span><span style="color:#79B8FF;">log</span><span style="color:#E1E4E8;">((</span><span style="color:#9ECBFF;">&quot;progress: %d/%d&quot;</span><span style="color:#E1E4E8;">):</span><span style="color:#79B8FF;">format</span><span style="color:#E1E4E8;">(total, current))</span></span>
<span class="line"><span style="color:#F97583;">end</span><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">coromega</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">when_progress_increased_by_build</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    target_structure_or_canvas,                  </span><span style="color:#6A737D;">--需要被导的东西</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">target_structure_or_canvas</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">get_start_pos</span><span style="color:#24292E;">(),  </span><span style="color:#6A737D;">--被导的东西的起始位置</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">target_structure_or_canvas</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">get_end_pos</span><span style="color:#24292E;">(),    </span><span style="color:#6A737D;">--被导的东西的结束位置</span></span>
<span class="line"><span style="color:#24292E;">    { x </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">31000</span><span style="color:#24292E;">, y </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">100</span><span style="color:#24292E;">, z </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">11000</span><span style="color:#24292E;"> },           </span><span style="color:#6A737D;">--导入到的位置(租赁服中)</span></span>
<span class="line"><span style="color:#24292E;">    {</span></span>
<span class="line"><span style="color:#24292E;">        speed </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2000</span><span style="color:#24292E;">,                            </span><span style="color:#6A737D;">--导入速度</span></span>
<span class="line"><span style="color:#24292E;">        incremental </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">,                     </span><span style="color:#6A737D;">--增量构建(false)</span></span>
<span class="line"><span style="color:#24292E;">        force_use_block_state </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">,           </span><span style="color:#6A737D;">--强制使用block state(false),注：即时这里设置false，如果struceture中use_block_state为true，也会使用block state</span></span>
<span class="line"><span style="color:#24292E;">        ignore_nbt_block </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">,                </span><span style="color:#6A737D;">--是否忽略nbt方块(false)</span></span>
<span class="line"><span style="color:#24292E;">        clear_target_block </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">,              </span><span style="color:#6A737D;">--导入时清除目标位置的方块(false)</span></span>
<span class="line"><span style="color:#24292E;">        clear_dropped_item </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">,              </span><span style="color:#6A737D;">--导入时清理掉落物(false)，注: 清理范围为整个租赁服，不止是导入的建筑范围</span></span>
<span class="line"><span style="color:#24292E;">        auto_reverse </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">,                      </span><span style="color:#6A737D;">--（重新开始时回退跃点）(true)</span></span>
<span class="line"><span style="color:#24292E;">        start_hop</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">,                             </span><span style="color:#6A737D;">--开始跃点(0)</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">):</span><span style="color:#005CC5;">start_new</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">function</span><span style="color:#24292E;">(total, current)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">coromega</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">log</span><span style="color:#24292E;">((</span><span style="color:#032F62;">&quot;progress: %d/%d&quot;</span><span style="color:#24292E;">):</span><span style="color:#005CC5;">format</span><span style="color:#24292E;">(total, current))</span></span>
<span class="line"><span style="color:#D73A49;">end</span><span style="color:#24292E;">)</span></span></code></pre></div></li></ul><h3 id="获取区域起点" tabindex="-1">获取区域起点 <a class="header-anchor" href="#获取区域起点" aria-label="Permalink to &quot;获取区域起点&quot;">​</a></h3><ul><li>structure/canvas:get_start_pos()<div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">local</span><span style="color:#E1E4E8;"> start_pos </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> structure</span><span style="color:#F97583;">/</span><span style="color:#B392F0;">canvas</span><span style="color:#E1E4E8;">:</span><span style="color:#79B8FF;">get_start_pos</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">local</span><span style="color:#24292E;"> start_pos </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> structure</span><span style="color:#D73A49;">/</span><span style="color:#6F42C1;">canvas</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">get_start_pos</span><span style="color:#24292E;">()</span></span></code></pre></div></li></ul><h3 id="设置区域起点" tabindex="-1">设置区域起点 <a class="header-anchor" href="#设置区域起点" aria-label="Permalink to &quot;设置区域起点&quot;">​</a></h3><ul><li>structure/canvas:set_start_pos(pos) <ul><li>如果新起点导致区域范围变大，变大的范围会被 空气 充满，如果区域变小，原有方块也不会丢失<div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">structure</span><span style="color:#F97583;">/</span><span style="color:#B392F0;">canvas</span><span style="color:#E1E4E8;">:</span><span style="color:#79B8FF;">set_start_pos</span><span style="color:#E1E4E8;">(pos)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">structure</span><span style="color:#D73A49;">/</span><span style="color:#6F42C1;">canvas</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">set_start_pos</span><span style="color:#24292E;">(pos)</span></span></code></pre></div></li></ul></li></ul><h3 id="获取区域终点" tabindex="-1">获取区域终点 <a class="header-anchor" href="#获取区域终点" aria-label="Permalink to &quot;获取区域终点&quot;">​</a></h3><ul><li>structure/canvas:get_end_pos()<div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">local</span><span style="color:#E1E4E8;"> start_pos </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> structure</span><span style="color:#F97583;">/</span><span style="color:#B392F0;">canvas</span><span style="color:#E1E4E8;">:</span><span style="color:#79B8FF;">get_end_pos</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">local</span><span style="color:#24292E;"> start_pos </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> structure</span><span style="color:#D73A49;">/</span><span style="color:#6F42C1;">canvas</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">get_end_pos</span><span style="color:#24292E;">()</span></span></code></pre></div></li></ul><h3 id="设置区域终点" tabindex="-1">设置区域终点 <a class="header-anchor" href="#设置区域终点" aria-label="Permalink to &quot;设置区域终点&quot;">​</a></h3><ul><li>structure/canvas:set_end_pos(pos) <ul><li>如果新终点导致区域范围变大，变大的范围会被 空气 充满，如果区域变小，原有方块也不会丢失<div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">structure</span><span style="color:#F97583;">/</span><span style="color:#B392F0;">canvas</span><span style="color:#E1E4E8;">:</span><span style="color:#79B8FF;">set_end_pos</span><span style="color:#E1E4E8;">(pos)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">structure</span><span style="color:#D73A49;">/</span><span style="color:#6F42C1;">canvas</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">set_end_pos</span><span style="color:#24292E;">(pos)</span></span></code></pre></div></li></ul></li></ul><h3 id="检查区域属性-是否必须使用-block-state" tabindex="-1">检查区域属性:是否必须使用 block state <a class="header-anchor" href="#检查区域属性-是否必须使用-block-state" aria-label="Permalink to &quot;检查区域属性:是否必须使用 block state&quot;">​</a></h3><ul><li>structure/canvas:get_must_block_state()<div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">local</span><span style="color:#E1E4E8;"> must_block_state </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> structure</span><span style="color:#F97583;">/</span><span style="color:#B392F0;">canvas</span><span style="color:#E1E4E8;">:</span><span style="color:#79B8FF;">get_must_block_state</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">local</span><span style="color:#24292E;"> must_block_state </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> structure</span><span style="color:#D73A49;">/</span><span style="color:#6F42C1;">canvas</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">get_must_block_state</span><span style="color:#24292E;">()</span></span></code></pre></div></li></ul><h3 id="设置区域属性-是否必须使用-block-state" tabindex="-1">设置区域属性:是否必须使用 block state <a class="header-anchor" href="#设置区域属性-是否必须使用-block-state" aria-label="Permalink to &quot;设置区域属性:是否必须使用 block state&quot;">​</a></h3><ul><li>structure/canvas:set_must_block_state(must_block_state)<div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">structure</span><span style="color:#F97583;">/</span><span style="color:#B392F0;">canvas</span><span style="color:#E1E4E8;">:</span><span style="color:#79B8FF;">set_must_block_state</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">structure</span><span style="color:#D73A49;">/</span><span style="color:#6F42C1;">canvas</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">set_must_block_state</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">true</span><span style="color:#24292E;">)</span></span></code></pre></div></li></ul><h3 id="对区域内所有方块应用变换" tabindex="-1">对区域内所有方块应用变换 <a class="header-anchor" href="#对区域内所有方块应用变换" aria-label="Permalink to &quot;对区域内所有方块应用变换&quot;">​</a></h3><ul><li>structure/canvas:apply_alter_to_blocks(start_pos, end_pos,alter_fn,option_ignore_air_block, option_ignore_nbt_block, option_ignore_normal_block) <ul><li>start_pos: 起始坐标</li><li>end_pos: 结束坐标</li><li>alter_fn: 变换函数</li><li>option_ignore_air_block: 是否忽略空气方块</li><li>option_ignore_nbt_block: 是否忽略 nbt 方块</li><li>option_ignore_normal_block: 是否忽略普通方块</li></ul><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">local</span><span style="color:#E1E4E8;"> alter_start_pos </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">source_structure</span><span style="color:#E1E4E8;">:</span><span style="color:#79B8FF;">get_start_pos</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">local</span><span style="color:#E1E4E8;"> alter_end_pos </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">source_structure</span><span style="color:#E1E4E8;">:</span><span style="color:#79B8FF;">get_end_pos</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">-- 忽略范围内的空气方块</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">local</span><span style="color:#E1E4E8;"> option_ignore_air_block </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">-- 修改范围内的nbt方块</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">local</span><span style="color:#E1E4E8;"> option_ignore_nbt_block </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">-- 忽略范围内的非nbt方块</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">local</span><span style="color:#E1E4E8;"> option_ignore_normal_block </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">-- 对于每一个方块，都会调用 alter_fn 函数，该函数返回修改后的方块的 runtime id 和 nbt</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">local</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">alter_fn</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">(x, y, z, block_rtid, nbt)</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">local</span><span style="color:#E1E4E8;"> nbt_type </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">nbt</span><span style="color:#E1E4E8;">:</span><span style="color:#79B8FF;">get_id</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#6A737D;">-- 只需修改命令块的命令</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> nbt_type </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;CommandBlock&quot; </span><span style="color:#F97583;">then</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#F97583;">local</span><span style="color:#E1E4E8;"> key_name </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">nbt</span><span style="color:#E1E4E8;">:</span><span style="color:#79B8FF;">get_string</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;Command&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#6A737D;">-- 将命令块的命令前加一个&quot;#&quot;,这样命令块就不会执行命令了,你也可以做其他修改</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#B392F0;">nbt</span><span style="color:#E1E4E8;">:</span><span style="color:#79B8FF;">set_string</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;Command&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;#&quot; </span><span style="color:#F97583;">..</span><span style="color:#E1E4E8;"> key_name)</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">end</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> block_rtid, nbt</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">end</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">--  对目标建筑进行修改</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;开始修改目标建筑, 请稍等...</span><span style="color:#79B8FF;">\\n</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">target_structure</span><span style="color:#E1E4E8;">:</span><span style="color:#79B8FF;">apply_alter_to_blocks</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">      alter_start_pos, alter_end_pos,                                              </span><span style="color:#6A737D;">-- 范围</span></span>
<span class="line"><span style="color:#E1E4E8;">      alter_fn,                                                                    </span><span style="color:#6A737D;">-- 修改函数</span></span>
<span class="line"><span style="color:#E1E4E8;">      option_ignore_air_block, option_ignore_nbt_block, option_ignore_normal_block </span><span style="color:#6A737D;">-- 选项</span></span>
<span class="line"><span style="color:#E1E4E8;">  )</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">local</span><span style="color:#24292E;"> alter_start_pos </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">source_structure</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">get_start_pos</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">local</span><span style="color:#24292E;"> alter_end_pos </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">source_structure</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">get_end_pos</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">-- 忽略范围内的空气方块</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">local</span><span style="color:#24292E;"> option_ignore_air_block </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">-- 修改范围内的nbt方块</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">local</span><span style="color:#24292E;"> option_ignore_nbt_block </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">-- 忽略范围内的非nbt方块</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">local</span><span style="color:#24292E;"> option_ignore_normal_block </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">-- 对于每一个方块，都会调用 alter_fn 函数，该函数返回修改后的方块的 runtime id 和 nbt</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">local</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">alter_fn</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">function</span><span style="color:#24292E;">(x, y, z, block_rtid, nbt)</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">local</span><span style="color:#24292E;"> nbt_type </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">nbt</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">get_id</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6A737D;">-- 只需修改命令块的命令</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> nbt_type </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;CommandBlock&quot; </span><span style="color:#D73A49;">then</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#D73A49;">local</span><span style="color:#24292E;"> key_name </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">nbt</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">get_string</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Command&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#6A737D;">-- 将命令块的命令前加一个&quot;#&quot;,这样命令块就不会执行命令了,你也可以做其他修改</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#6F42C1;">nbt</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">set_string</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Command&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;#&quot; </span><span style="color:#D73A49;">..</span><span style="color:#24292E;"> key_name)</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">end</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> block_rtid, nbt</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">end</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">--  对目标建筑进行修改</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">print</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;开始修改目标建筑, 请稍等...</span><span style="color:#005CC5;">\\n</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">target_structure</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">apply_alter_to_blocks</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">      alter_start_pos, alter_end_pos,                                              </span><span style="color:#6A737D;">-- 范围</span></span>
<span class="line"><span style="color:#24292E;">      alter_fn,                                                                    </span><span style="color:#6A737D;">-- 修改函数</span></span>
<span class="line"><span style="color:#24292E;">      option_ignore_air_block, option_ignore_nbt_block, option_ignore_normal_block </span><span style="color:#6A737D;">-- 选项</span></span>
<span class="line"><span style="color:#24292E;">  )</span></span></code></pre></div></li></ul><h2 id="structure" tabindex="-1">Structure <a class="header-anchor" href="#structure" aria-label="Permalink to &quot;Structure&quot;">​</a></h2><h3 id="获得-omega-builder-可接受的存档名" tabindex="-1">获得 omega_builder 可接受的存档名 <a class="header-anchor" href="#获得-omega-builder-可接受的存档名" aria-label="Permalink to &quot;获得 omega_builder 可接受的存档名&quot;">​</a></h3><ul><li>get_file_name() <ul><li>获得 omega_builder 可接受的存档名</li></ul><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">local</span><span style="color:#E1E4E8;"> file_name</span><span style="color:#F97583;">=</span><span style="color:#B392F0;">structure</span><span style="color:#E1E4E8;">:</span><span style="color:#79B8FF;">get_file_name</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">local</span><span style="color:#24292E;"> file_name</span><span style="color:#D73A49;">=</span><span style="color:#6F42C1;">structure</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">get_file_name</span><span style="color:#24292E;">()</span></span></code></pre></div></li></ul><h3 id="获得建筑名" tabindex="-1">获得建筑名 <a class="header-anchor" href="#获得建筑名" aria-label="Permalink to &quot;获得建筑名&quot;">​</a></h3><ul><li>get_structure_name() <ul><li>获得建筑名</li></ul><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">local</span><span style="color:#E1E4E8;"> structure_name</span><span style="color:#F97583;">=</span><span style="color:#B392F0;">structure</span><span style="color:#E1E4E8;">:</span><span style="color:#79B8FF;">get_structure_name</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">local</span><span style="color:#24292E;"> structure_name</span><span style="color:#D73A49;">=</span><span style="color:#6F42C1;">structure</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">get_structure_name</span><span style="color:#24292E;">()</span></span></code></pre></div></li></ul><h3 id="设置建筑名" tabindex="-1">设置建筑名 <a class="header-anchor" href="#设置建筑名" aria-label="Permalink to &quot;设置建筑名&quot;">​</a></h3><ul><li>set_structure_name(name) <ul><li>设置建筑名</li></ul><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">structure</span><span style="color:#E1E4E8;">:</span><span style="color:#79B8FF;">set_structure_name</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;test_structure&quot;</span><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">structure</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">set_structure_name</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;test_structure&quot;</span><span style="color:#24292E;">)</span></span></code></pre></div></li></ul><h3 id="移除磁盘中的存档文件并销毁建筑" tabindex="-1">移除磁盘中的存档文件并销毁建筑 <a class="header-anchor" href="#移除磁盘中的存档文件并销毁建筑" aria-label="Permalink to &quot;移除磁盘中的存档文件并销毁建筑&quot;">​</a></h3><ul><li>remove() <ul><li>移除磁盘中的存档文件并销毁建筑，此函数后，该建筑无法被操作</li></ul><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">structure</span><span style="color:#E1E4E8;">:</span><span style="color:#79B8FF;">remove</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">structure</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">remove</span><span style="color:#24292E;">()</span></span></code></pre></div></li></ul><h3 id="关闭建筑-并在指定路径生成-mcworld-存档" tabindex="-1">关闭建筑，并在指定路径生成 .mcworld 存档 <a class="header-anchor" href="#关闭建筑-并在指定路径生成-mcworld-存档" aria-label="Permalink to &quot;关闭建筑，并在指定路径生成 .mcworld 存档&quot;">​</a></h3><ul><li>gen_mcworld(path) <ul><li>关闭建筑，并在指定路径生成 .mcworld 存档，此函数后，该建筑无法被操作，直到重新打开 (structures.open_or_create_structure(path))</li></ul><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">-- 获得输出目录，输出目录为当前目录(.), 这是指程序运行的目录，不是本文件所在的目录</span></span>
<span class="line"><span style="color:#F97583;">local</span><span style="color:#E1E4E8;"> output_dir </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;.&quot;</span></span>
<span class="line"><span style="color:#6A737D;">-- 自动计算建议的输出文件名</span></span>
<span class="line"><span style="color:#F97583;">local</span><span style="color:#E1E4E8;"> output_file_name </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> ((</span><span style="color:#9ECBFF;">&quot;%s/%s.mcworld&quot;</span><span style="color:#E1E4E8;">):</span><span style="color:#79B8FF;">format</span><span style="color:#E1E4E8;">(output_dir, </span><span style="color:#B392F0;">target_structure</span><span style="color:#E1E4E8;">:</span><span style="color:#79B8FF;">get_file_name</span><span style="color:#E1E4E8;">()))</span></span>
<span class="line"><span style="color:#6A737D;">-- 将目标建筑写入到输出文件 (mcworld 格式)</span></span>
<span class="line"><span style="color:#B392F0;">target_structure</span><span style="color:#E1E4E8;">:</span><span style="color:#79B8FF;">gen_mcworld</span><span style="color:#E1E4E8;">(output_file_name) </span><span style="color:#6A737D;">-- 需要注意，调用这个函数后，建筑就无法再修改/导入/进行其他操作了，因为生成mcworld需要先关闭建筑</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">-- 获得输出目录，输出目录为当前目录(.), 这是指程序运行的目录，不是本文件所在的目录</span></span>
<span class="line"><span style="color:#D73A49;">local</span><span style="color:#24292E;"> output_dir </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;.&quot;</span></span>
<span class="line"><span style="color:#6A737D;">-- 自动计算建议的输出文件名</span></span>
<span class="line"><span style="color:#D73A49;">local</span><span style="color:#24292E;"> output_file_name </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> ((</span><span style="color:#032F62;">&quot;%s/%s.mcworld&quot;</span><span style="color:#24292E;">):</span><span style="color:#005CC5;">format</span><span style="color:#24292E;">(output_dir, </span><span style="color:#6F42C1;">target_structure</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">get_file_name</span><span style="color:#24292E;">()))</span></span>
<span class="line"><span style="color:#6A737D;">-- 将目标建筑写入到输出文件 (mcworld 格式)</span></span>
<span class="line"><span style="color:#6F42C1;">target_structure</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">gen_mcworld</span><span style="color:#24292E;">(output_file_name) </span><span style="color:#6A737D;">-- 需要注意，调用这个函数后，建筑就无法再修改/导入/进行其他操作了，因为生成mcworld需要先关闭建筑</span></span></code></pre></div></li></ul><h3 id="关闭建筑" tabindex="-1">关闭建筑 <a class="header-anchor" href="#关闭建筑" aria-label="Permalink to &quot;关闭建筑&quot;">​</a></h3><ul><li>close() <ul><li>关闭建筑，此函数后，该建筑无法被操作，直到重新打开 (structures.open_or_create_structure(path))</li></ul><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">target_structure</span><span style="color:#E1E4E8;">:</span><span style="color:#79B8FF;">close</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">target_structure</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">close</span><span style="color:#24292E;">()</span></span></code></pre></div></li></ul><h2 id="canvas" tabindex="-1">Canvas <a class="header-anchor" href="#canvas" aria-label="Permalink to &quot;Canvas&quot;">​</a></h2><h3 id="在-canvas-的-pos位置放置一个方块" tabindex="-1">在 canvas 的 pos位置放置一个方块 <a class="header-anchor" href="#在-canvas-的-pos位置放置一个方块" aria-label="Permalink to &quot;在 canvas 的 pos位置放置一个方块&quot;">​</a></h3><ul><li>place_block(pos, block_name, block_data) <ul><li>范围: 任意</li><li>说明: 在 canvas 的 pos 位置放置一个方块</li><li>参数: <ul><li>pos: 放置的位置</li><li>block_name: 方块的名字</li><li>block_data: 方块的数据</li></ul></li><li>返回: 无</li></ul><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">-- 在1,2,3位置放置一个状态为0的石头方块</span></span>
<span class="line"><span style="color:#B392F0;">canvas</span><span style="color:#E1E4E8;">:</span><span style="color:#79B8FF;">place_block</span><span style="color:#E1E4E8;">({ x </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">, y </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">, z </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;"> }, </span><span style="color:#9ECBFF;">&quot;stone&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;0&quot;</span><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">-- 在1,2,3位置放置一个状态为0的石头方块</span></span>
<span class="line"><span style="color:#6F42C1;">canvas</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">place_block</span><span style="color:#24292E;">({ x </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, y </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">, z </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">3</span><span style="color:#24292E;"> }, </span><span style="color:#032F62;">&quot;stone&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;0&quot;</span><span style="color:#24292E;">)</span></span></code></pre></div></li></ul><h3 id="在-canvas-的-pos位置放置一个命令方块" tabindex="-1">在 canvas 的 pos位置放置一个命令方块 <a class="header-anchor" href="#在-canvas-的-pos位置放置一个命令方块" aria-label="Permalink to &quot;在 canvas 的 pos位置放置一个命令方块&quot;">​</a></h3><ul><li>place_command_block(pos, block_name, block_data, option) <ul><li>范围: 任意</li><li>说明: 在 canvas 的 pos位置放置一个命令方块</li><li>参数: <ul><li>pos: 放置的位置</li><li>block_name: 方块的名字</li><li>block_data: 方块的状态</li><li>option: 命令方块的配置</li></ul></li><li>返回: 无</li></ul><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">-- 在884.73.829位置放置一个重复命令方块,命令为list @a 10tick后执行,并且需要红石激活 条件为真 名字为:列出所有玩家 延迟为10 tick 输出结果 并且在第一次tick时执行</span></span>
<span class="line"><span style="color:#B392F0;">canvas</span><span style="color:#E1E4E8;">:</span><span style="color:#79B8FF;">place_command_block</span><span style="color:#E1E4E8;">( </span></span>
<span class="line"><span style="color:#E1E4E8;">    { x </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">884</span><span style="color:#E1E4E8;">, y </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">73</span><span style="color:#E1E4E8;">, z </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">829</span><span style="color:#E1E4E8;"> },       </span><span style="color:#6A737D;">-- 坐标</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;repeating_command_block&quot;</span><span style="color:#E1E4E8;">,          </span><span style="color:#6A737D;">-- command_block/chain_command_block/repeating_command_block</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">,                                  </span><span style="color:#6A737D;">-- 方块数据，影响朝向</span></span>
<span class="line"><span style="color:#E1E4E8;">    { </span></span>
<span class="line"><span style="color:#E1E4E8;">        need_red_stone </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,          </span><span style="color:#6A737D;">-- 红石激活</span></span>
<span class="line"><span style="color:#E1E4E8;">        conditional </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,             </span><span style="color:#6A737D;">-- 有条件</span></span>
<span class="line"><span style="color:#E1E4E8;">        command </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;list @a&quot;</span><span style="color:#E1E4E8;">,            </span><span style="color:#6A737D;">-- 命令</span></span>
<span class="line"><span style="color:#E1E4E8;">        name </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;列出所有玩家&quot;</span><span style="color:#E1E4E8;">,           </span><span style="color:#6A737D;">-- 方块名</span></span>
<span class="line"><span style="color:#E1E4E8;">        tick_delay </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;">,                </span><span style="color:#6A737D;">-- 延迟</span></span>
<span class="line"><span style="color:#E1E4E8;">        track_output </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,            </span><span style="color:#6A737D;">-- 显示输出</span></span>
<span class="line"><span style="color:#E1E4E8;">        execute_on_first_tick </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,   </span><span style="color:#6A737D;">-- 执行第一个对象</span></span>
<span class="line"><span style="color:#E1E4E8;">    } </span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">-- 在884.73.829位置放置一个重复命令方块,命令为list @a 10tick后执行,并且需要红石激活 条件为真 名字为:列出所有玩家 延迟为10 tick 输出结果 并且在第一次tick时执行</span></span>
<span class="line"><span style="color:#6F42C1;">canvas</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">place_command_block</span><span style="color:#24292E;">( </span></span>
<span class="line"><span style="color:#24292E;">    { x </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">884</span><span style="color:#24292E;">, y </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">73</span><span style="color:#24292E;">, z </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">829</span><span style="color:#24292E;"> },       </span><span style="color:#6A737D;">-- 坐标</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;repeating_command_block&quot;</span><span style="color:#24292E;">,          </span><span style="color:#6A737D;">-- command_block/chain_command_block/repeating_command_block</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">,                                  </span><span style="color:#6A737D;">-- 方块数据，影响朝向</span></span>
<span class="line"><span style="color:#24292E;">    { </span></span>
<span class="line"><span style="color:#24292E;">        need_red_stone </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">,          </span><span style="color:#6A737D;">-- 红石激活</span></span>
<span class="line"><span style="color:#24292E;">        conditional </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">,             </span><span style="color:#6A737D;">-- 有条件</span></span>
<span class="line"><span style="color:#24292E;">        command </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;list @a&quot;</span><span style="color:#24292E;">,            </span><span style="color:#6A737D;">-- 命令</span></span>
<span class="line"><span style="color:#24292E;">        name </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;列出所有玩家&quot;</span><span style="color:#24292E;">,           </span><span style="color:#6A737D;">-- 方块名</span></span>
<span class="line"><span style="color:#24292E;">        tick_delay </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">10</span><span style="color:#24292E;">,                </span><span style="color:#6A737D;">-- 延迟</span></span>
<span class="line"><span style="color:#24292E;">        track_output </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">,            </span><span style="color:#6A737D;">-- 显示输出</span></span>
<span class="line"><span style="color:#24292E;">        execute_on_first_tick </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">,   </span><span style="color:#6A737D;">-- 执行第一个对象</span></span>
<span class="line"><span style="color:#24292E;">    } </span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div></li></ul><h3 id="设置-canvas-放置方块操作的坐标偏移" tabindex="-1">设置 canvas 放置方块操作的坐标偏移 <a class="header-anchor" href="#设置-canvas-放置方块操作的坐标偏移" aria-label="Permalink to &quot;设置 canvas 放置方块操作的坐标偏移&quot;">​</a></h3><ul><li>set_upcoming_block_offset(offset) - 后续所有 place_block / place_command_block 的操作，或间接调用 place_block / place_command_block 的操作 中的 pos 都会加上 offset 指定的偏移<div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">canvas</span><span style="color:#E1E4E8;">:</span><span style="color:#79B8FF;">set_upcoming_block_offset</span><span style="color:#E1E4E8;">({</span><span style="color:#79B8FF;">100</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">100</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">100</span><span style="color:#E1E4E8;">})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">canvas</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">set_upcoming_block_offset</span><span style="color:#24292E;">({</span><span style="color:#005CC5;">100</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">100</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">100</span><span style="color:#24292E;">})</span></span></code></pre></div></li></ul><h2 id="canvas-artists" tabindex="-1">Canvas Artists <a class="header-anchor" href="#canvas-artists" aria-label="Permalink to &quot;Canvas Artists&quot;">​</a></h2><p>local canvas_artists = omega.canvas_artists</p><h3 id="在-canvas-上绘制地图画" tabindex="-1">在 canvas 上绘制地图画 <a class="header-anchor" href="#在-canvas-上绘制地图画" aria-label="Permalink to &quot;在 canvas 上绘制地图画&quot;">​</a></h3><ul><li>canvas_artists.map_art(canvas, image_file, apply_dither, xsize, zsize) <ul><li>在 canvas 上绘制地图画</li><li>image_file 为图片路径，图片可以是 jpg, jpeg, png</li><li>apply_dither: 是否应用量化算法，在地图画较大时，效果更好，较小时，效果更差</li><li>xsize: 横向地图画数量</li><li>zsize: 纵向地图画数量</li></ul><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">local</span><span style="color:#E1E4E8;"> canvas_artists </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> omega.</span><span style="color:#B392F0;">canvas_artists</span></span>
<span class="line"><span style="color:#E1E4E8;">canvas_artists.</span><span style="color:#79B8FF;">map_art</span><span style="color:#E1E4E8;">(canvas, </span><span style="color:#9ECBFF;">&quot;test.jpg&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">local</span><span style="color:#24292E;"> canvas_artists </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> omega.</span><span style="color:#6F42C1;">canvas_artists</span></span>
<span class="line"><span style="color:#24292E;">canvas_artists.</span><span style="color:#005CC5;">map_art</span><span style="color:#24292E;">(canvas, </span><span style="color:#032F62;">&quot;test.jpg&quot;</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">3</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">3</span><span style="color:#24292E;">)</span></span></code></pre></div></li></ul>`,79),e=[p];function t(c,r,y,i,E,u){return l(),a("div",null,e)}const b=s(o,[["render",t]]);export{_ as __pageData,b as default};
